class BusinessChatWidget {
  constructor(config = {}) {
    this.config = {
      apiEndpoint: 'https://api.versatileai.solutions/chat',
      widgetTitle: 'Aura AI Assistant',
      primaryColor: '#4a90e2',
      position: 'right',
      initialMessage: 'Hello! How can I help you today?',
      placeholder: 'Type your question here...',
      ...config
    };

    this.messages = [];
    this.isOpen = false;
    this.isLoading = false;

    this.init();
  }

  init() {
    this.createWidgetElements();
    this.addEventListeners();
    if (this.config.initialMessage) {
      this.addMessage('assistant', this.config.initialMessage);
    }
  }

  createWidgetElements() {
    const styleEl = document.createElement('style');
    styleEl.innerHTML = this.getStyles();
    document.head.appendChild(styleEl);

    this.widgetContainer = document.createElement('div');
    this.widgetContainer.className = 'business-chat-widget';
    this.widgetContainer.dataset.position = this.config.position;
    document.body.appendChild(this.widgetContainer);

    this.toggleButton = document.createElement('button');
    this.toggleButton.className = 'widget-toggle-btn';
    this.toggleButton.innerHTML = `ðŸ’¬`;
    this.widgetContainer.appendChild(this.toggleButton);

    this.chatContainer = document.createElement('div');
    this.chatContainer.className = 'widget-chat-container';
    this.chatContainer.style.display = 'none';
    this.widgetContainer.appendChild(this.chatContainer);

    const chatHeader = document.createElement('div');
    chatHeader.className = 'widget-chat-header';
    chatHeader.innerHTML = `<h3>${this.config.widgetTitle}</h3><button class="widget-close-btn">&times;</button>`;
    this.chatContainer.appendChild(chatHeader);

    this.messagesContainer = document.createElement('div');
    this.messagesContainer.className = 'widget-messages';
    this.chatContainer.appendChild(this.messagesContainer);

    const inputContainer = document.createElement('div');
    inputContainer.className = 'widget-input-container';
    this.chatContainer.appendChild(inputContainer);

    this.chatInput = document.createElement('input');
    this.chatInput.type = 'text';
    this.chatInput.placeholder = this.config.placeholder;
    this.chatInput.className = 'widget-input';
    inputContainer.appendChild(this.chatInput);

    this.sendButton = document.createElement('button');
    this.sendButton.className = 'widget-send-btn';
    this.sendButton.innerHTML = `âž¤`;
    inputContainer.appendChild(this.sendButton);

    const disclaimerContainer = document.createElement('div');
    disclaimerContainer.className = 'widget-disclaimer';
    disclaimerContainer.innerHTML = `
      <p>By chatting, you agree to this <a href="#" class="disclaimer-link">disclaimer</a>.</p>
      <p class="powered-by">Powered by <span class="aura-brand">Aura</span></p>
    `;
    this.chatContainer.appendChild(disclaimerContainer);

    disclaimerContainer.querySelector('.disclaimer-link').addEventListener('click', (e) => {
      e.preventDefault();
      alert('DISCLAIMER: All responses are generated by AI. We are not liable for any inaccuracies or misinterpretations in the responses provided.');
    });
  }

  addEventListeners() {
    this.toggleButton.addEventListener('click', () => this.toggleWidget());
    this.chatContainer.querySelector('.widget-close-btn').addEventListener('click', () => this.toggleWidget(false));
    this.sendButton.addEventListener('click', () => this.sendMessage());
    this.chatInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') this.sendMessage();
    });
  }

  toggleWidget(force = null) {
    this.isOpen = force !== null ? force : !this.isOpen;
    this.chatContainer.style.display = this.isOpen ? 'flex' : 'none';
    this.toggleButton.style.display = this.isOpen ? 'none' : 'flex';
    if (this.isOpen) this.chatInput.focus();
  }

  open() {
    this.toggleWidget(true);
  }

  async sendMessage() {
    const message = this.chatInput.value.trim();
    if (!message || this.isLoading) return;

    this.chatInput.value = '';
    this.addMessage('user', message);
    this.isLoading = true;
    this.addLoadingIndicator();

    try {
      const response = await fetch(this.config.apiEndpoint, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ message })
      });

      this.removeLoadingIndicator();

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(errorData.error || 'API request failed');
      }

      const data = await response.json();
      this.addMessage('assistant', data.response);
    } catch (error) {
      console.error('Error sending message:', error);
      this.removeLoadingIndicator();
      this.addMessage('assistant', error.message || 'Sorry, I encountered an error.');
    } finally {
      this.isLoading = false;
    }
  }

  addMessage(type, content) {
    const message = { type, content, timestamp: new Date() };
    this.messages.push(message);

    const messageEl = document.createElement('div');
    messageEl.className = `widget-message ${type}-message`;
    messageEl.innerHTML = `<div class="message-content">${content}</div>`;
    this.messagesContainer.appendChild(messageEl);
    this.messagesContainer.scrollTop = this.messagesContainer.scrollHeight;
  }

  addLoadingIndicator() {
    const loadingEl = document.createElement('div');
    loadingEl.className = 'widget-message assistant-message loading-message';
    loadingEl.innerHTML = '<div class="loading-dots"><span></span><span></span><span></span></div>';
    this.messagesContainer.appendChild(loadingEl);
    this.messagesContainer.scrollTop = this.messagesContainer.scrollHeight;
  }

  removeLoadingIndicator() {
    const loadingEl = this.messagesContainer.querySelector('.loading-message');
    if (loadingEl) loadingEl.remove();
  }

  getStyles() {
    return `
      .business-chat-widget {
        position: fixed;
        bottom: 20px;
        z-index: 9999;
        font-family: sans-serif;
      }
      .business-chat-widget[data-position="right"] { right: 20px; }
      .business-chat-widget[data-position="left"] { left: 20px; }
      .widget-toggle-btn {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background-color: ${this.config.primaryColor};
        color: white;
        border: none;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: transform 0.3s ease;
      }
      .widget-toggle-btn:hover { transform: scale(1.05); }
      .widget-chat-container {
        position: absolute;
        bottom: 0;
        width: 350px;
        height: 500px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 5px 25px rgba(0, 0, 0, 0.2);
        display: flex;
        flex-direction: column;
        overflow: hidden;
      }
      .widget-chat-header {
        background-color: ${this.config.primaryColor};
        color: white;
        padding: 15px;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .widget-close-btn {
        background: none;
        border: none;
        color: white;
        font-size: 24px;
        cursor: pointer;
      }
      .widget-messages {
        flex: 1;
        padding: 15px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
      }
      .widget-message {
        max-width: 80%;
        margin-bottom: 10px;
        padding: 10px 15px;
        border-radius: 18px;
        font-size: 14px;
        line-height: 1.4;
        word-wrap: break-word;
      }
      .user-message {
        align-self: flex-end;
        background-color: ${this.config.primaryColor};
        color: white;
        border-bottom-right-radius: 5px;
      }
      .assistant-message {
        align-self: flex-start;
        background-color: #f1f1f1;
        color: #333;
        border-bottom-left-radius: 5px;
      }
      .widget-input-container {
        display: flex;
        padding: 10px;
        border-top: 1px solid #eee;
      }
      .widget-input {
        flex: 1;
        padding: 10px 15px;
        border: 1px solid #ddd;
        border-radius: 20px;
        font-size: 14px;
        outline: none;
      }
      .widget-send-btn {
        background: transparent;
        border: none;
        margin-left: 10px;
        color: ${this.config.primaryColor};
        cursor: pointer;
      }
      .loading-dots span {
        width: 8px;
        height: 8px;
        margin: 0 2px;
        background-color: #888;
        border-radius: 50%;
        display: inline-block;
        animation: loading 1.4s infinite ease-in-out both;
      }
      .widget-disclaimer {
        font-size: 12px;
        color: #888;
        padding: 8px 12px;
        text-align: center;
        border-top: 1px solid #eee;
      }
      .disclaimer-link {
        color: ${this.config.primaryColor};
        text-decoration: underline;
        cursor: pointer;
      }
      .aura-brand {
        font-weight: bold;
        background: linear-gradient(to right, #f6d365, #fda085);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
      }
      @keyframes loading {
        0%, 80%, 100% { transform: scale(0); }
        40% { transform: scale(1); }
      }
    `;
  }
}

if (typeof window !== 'undefined') {
  window.BusinessChatWidget = BusinessChatWidget;
}
